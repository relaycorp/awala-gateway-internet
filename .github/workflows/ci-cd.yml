name: Run CI and potentially release
on:
  pull_request:
  push:
    branches: [master]
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - run: npm run static-checks
      - run: npm run test:ci:unit

      # Functional tests
      - run: docker-compose pull
        env:
          COMPOSE_FILE: docker-compose.yml:src/functional_tests/docker-compose.override.yml
      - run: npm run test:functional
        env:
          IS_GITHUB: 'true'

      # Export Docker image so it can be published
      - run: docker save -o /tmp/docker-image relaynet-gw:local
      - uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: /tmp/docker-image

  release:
    name: Release
    needs: ci
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Release
        uses: codfish/semantic-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
