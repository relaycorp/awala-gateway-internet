@startuml "system"
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml

skinparam wrapWidth 200
skinparam maxMessageSize 200

Person(user, User)
Person(courier, Courier)

System_Boundary(c1, "Awala-Internet Gateway") {
  Container(poweb, "PoWeb service", "Fastify, ws", "Allows direct communication with private gateway over the Internet")

  Container(cogrpc, "CogRPC service", "gRPC server", "Allows courier to collect and deliver cargo on behalf of private gateway")

  Container(pohttp, "PoHTTP service", "Fastify", "Allows other gateways and public endpoints to send parcels to private peers")

  Container(background_queue, "Background queue", "CloudEvents server")

  Container(message_broker, "Message broker", "CloudEvents broker", "E.g., Google PubSub")
  Container(redis, "Redis", "Redis PubSub")

  ContainerDb(object_store, "Object store", "S3-compatible server", "Stores parcels and incoming cargoes")

  ContainerDb(db, "Database", "MongoDB")

  Container(kms, "KMS")
}

System_Ext(public_endpoint, "Internet endpoint", "E.g., letro.app")
System_Ext(other_public_gateway, "Another Internet gateway")

Rel_R(user, courier, "Exchange parcels encapsulated in cargoes when the Internet is unavailable")

Rel(user, poweb, "Deliver and collects parcels via private gateway when the Internet is available", "HTTP, WebSocket")
Rel(courier, cogrpc, "Deliver and collects cargo", "gRPC")
Rel(public_endpoint, pohttp, "Deliver parcels")
Rel(other_public_gateway, pohttp, "Deliver parcels")

Rel(poweb, object_store, "Store and retrieve parcels")
Rel(poweb, message_broker, "Queue parcels bound for another Internet node")
Rel(poweb, redis, "Notify about parcels bound for private peers")
Rel(redis, poweb, "Subscribe to new parcels received in real time")
Rel(poweb, db, "Read own certificates")
Rel(poweb, kms, "Sign certificate with private key")

Rel(pohttp, db, "Read own certificates")
Rel(pohttp, object_store, "Store parcels")
Rel(pohttp, redis, "Notify about parcels bound for private peers")
Rel(pohttp, message_broker, "Queue parcels bound for private peers")

Rel(cogrpc, db, "Read own certificates")
Rel(cogrpc, object_store, "Store cargoes and retrieves parcels")
Rel(cogrpc, kms, "Sign cargoes with private key")
Rel(cogrpc, message_broker, "Notify cargo reception")

Rel(background_queue, db, "")
Rel(background_queue, public_endpoint, "Deliver parcels")
Rel(background_queue, other_public_gateway, "Deliver parcels")
Rel(message_broker, background_queue, "Process cargo bound for private peers")
Rel(message_broker, background_queue, "Process cargo from private peers")
Rel(background_queue, redis, "Notify about parcels bound for private peers")
Rel(background_queue, object_store, "Store parcels bound for private peers")
Rel(background_queue, kms, "Read private keys to decrypt cargoes")

@enduml
